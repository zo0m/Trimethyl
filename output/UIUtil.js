Ext.data.JsonP.UIUtil({"tagname":"class","name":"UIUtil","autodetected":{},"files":[{"filename":"uiutil.js","href":"uiutil.html#UIUtil"}],"author":[{"tagname":"author","name":"Flavio De Stefano","email":"flavio.destefano@caffeinalab.com"}],"members":[{"name":"populateListViewFromCollection","tagname":"method","owner":"UIUtil","id":"method-populateListViewFromCollection","meta":{}},{"name":"setBackgroundCoverForView","tagname":"method","owner":"UIUtil","id":"method-setBackgroundCoverForView","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-UIUtil","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/uiutil.html#UIUtil' target='_blank'>uiutil.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-populateListViewFromCollection' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UIUtil'>UIUtil</span><br/><a href='source/uiutil.html#UIUtil-method-populateListViewFromCollection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/UIUtil-method-populateListViewFromCollection' class='name expandable'>populateListViewFromCollection</a>( <span class='pre'>C, opt, [$ui]</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Parse an array or a Backbone.Collection and populate a ListView with this values. ...</div><div class='long'><p>Parse an array or a Backbone.Collection and populate a ListView with this values.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>C</span> : Object<div class='sub-desc'><p>Array or Backbone.Collection</p>\n</div></li><li><span class='pre'>opt</span> : Object<div class='sub-desc'><p>Options</p>\n<ul><li><span class='pre'>datasetCb</span> : Function<div class='sub-desc'><p>You must provide a callback to fill the ListItem, like this:</p>\n\n<pre><code>return {\n   properties: {\n      height: 52,\n        itemId: el.id,\n        searchableText: el.get('city')\n    },\n    title: { text: el.get('title') },\n    address: { text: el.get('address')+', '+el.get('city') }\n}\n</code></pre>\n</div></li><li><span class='pre'>groupBy</span> : Object<div class='sub-desc'><p>See <code>_.groupBy</code></p>\n</div></li><li><span class='pre'>headerViewCb</span> : Function<div class='sub-desc'><p>A callback to generate the headerView for the ListView.</p>\n</div></li><li><span class='pre'>sectionIndex</span> : Boolean<div class='sub-desc'><p>If <code>true</code>, provide the <strong>alphabet on the right</strong> functionality.</p>\n</div></li></ul></div></li><li><span class='pre'>$ui</span> : Ti.UI.ListView (optional)<div class='sub-desc'><p>The ListView to populate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setBackgroundCoverForView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UIUtil'>UIUtil</span><br/><a href='source/uiutil.html#UIUtil-method-setBackgroundCoverForView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/UIUtil-method-setBackgroundCoverForView' class='name expandable'>setBackgroundCoverForView</a>( <span class='pre'>url</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the background image with cover method ...</div><div class='long'><p>Set the background image with cover method</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});